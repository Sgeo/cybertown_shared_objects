<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8"/>
    <link rel="stylesheet" type="text/css" href="https://code.create3000.de/x_ite/4.6.8/dist/x_ite.css"/>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>
    <script type="text/javascript" src="https://code.create3000.de/x_ite/4.6.8/dist/x_ite.min.js"></script>
    <script type="text/javascript" src="/x_ite_mods/spec_color.js"></script>
    <script type="text/javascript" src="/x_ite_mods/relax_route.js"></script>
    <script type="text/javascript" src="/x_ite_mods/relax_is.js"></script>
    <script type="text/javascript" src="/x_ite_mods/arrow_keys.js"></script>
    <script type="text/javascript">
        (async function() {
            window.addEventListener("hashchange", function(e) {
                location.reload();
            });
            const [worldID, subroom] = location.hash.substr(1).split("|");
            const [worldData, avatarsData] = await Promise.all([
                fetch("/data/worlds.json").then(resp => resp.json()).then(worlds => worlds[worldID]),
                fetch("/data/avatars.json").then(resp => resp.json())
            ]);
            const worldURL = worldData.url;
            const room = worldData.room + (subroom ? "|" + subroom : "");
            X3D(function() {
                let browser = X3D.createBrowser();
                browser.setAttribute("src", worldURL);
                document.querySelector("#world").appendChild(browser);
                BxxEvents.dispatchEvent(new CustomEvent("INIT", {detail: {avatarsData: avatarsData}}));
                X3D.getBrowser().addBrowserCallback({}, function(eventType) {
                    if(eventType === X3D.X3DConstants.INITIALIZED_EVENT) {
                        BxxEvents.dispatchEvent(new CustomEvent("INIT:network", {
                            detail: {
                                room: room,
                                avatar: localStorage.getItem("avatar") || "default",
                                nick: localStorage.getItem("nick") || null
                            }
                        }));
                    }
                });
            });
        })();
    </script>
    <script type="text/javascript" src="/xite_js/xite_bxx.js"></script>
    <!--<script type="text/javascript" src="/xite_js/xite_so.js"></script>-->
    <script type="text/javascript" src="/xite_js/xite_se.js"></script>
    <script type="text/javascript" src="/xite_js/xite_av.js"></script>
    <script type="text/javascript" src="/xite_js/xite_socketio.js"></script>
    <script type="text/javascript" src="/xite_js/xite_chat.js"></script>
    <style type="text/css">
html, body {
height: 100%;
Width: 100%;
margin: 0;
padding: 0;
border: 0;
Overflow: hidden;
}
X3DCanvas {
height: 100%;
width: 100%;
scroll: none;
Overflow: hidden;
}
.grid {
display: grid;
grid-gap: 1px;
grid-template-rows: 67vh 29vh 4vh;
grid-template-columns: 44vw 6vw 50vw;
justify-items: stretch;
justify-content: stretch;
align-content: stretch;
background-color: grey;
}

.world {
grid-area: world;
grid-column: 1 / 4;
grid-row: 1;
text-align: center;
Overflow: hidden;
background-color: black;	
}
.chatarea {
grid-area: read;
grid-column: 1 / 3;
grid-row: 2;
text-align: center;
overflow-x: hidden;
overflow-y: auto;
background-color: #447744;
color: white;
border: 3px solid #0ede0e;
padding: 10px;
font-family: Arial;
}
#chatlog {
list-style: none;
text-align: left;
padding: 0;
margin: 0;
color: #0ede0e;
}
.chatinput {
grid-area: input;
grid-column: 1;
grid-row: 3;
background-color: #447744;	
}
.button {
grid-area: submit;
grid-column: 2;
grid-row: 3;
Overflow: hidden;
background-color: #447744;	
}
.objarea {
grid-area: object;
grid-column: 3;
grid-row: 2 / 4;
Overflow: hidden;
background-color: #447744;
color: white;
}
.fill {
width: 100%;
height: 100%;
}
input[type=submit] {
width: 6vw;
height: 4vh;
font-size: 0.8em;
}
</style>
</head>
<body>
<div class="grid">
  <div id="world" class="world"></div>
  <div class="chatarea" id="chatarea">
	  <ul id="chatlog"></ul>
	  </div>
  <div class="chatinput">
	  <form id="chatform" class="fill">
      <input type="text" id="chatinput" class="fill">
      </div>
  <div class="button">
	  <input type="submit" value="Send" class="submit">
	  </form>
	  </div>
  <div class="objarea">
	  <h1>Gestures</h1>
	  <ul id="gestures">
	  </ul>
	</div>
</div>
</body>
</html>
